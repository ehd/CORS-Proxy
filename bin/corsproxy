#!/usr/bin/env node

var Hapi = require('hapi')
var plugin = require('../index')
var good = require('good')
var loggerOptions = require('../lib/logger-options')

var server = new Hapi.Server({})
var port = parseInt(process.env.CORSPROXY_PORT || process.env.PORT || 1337, 10)

server.connection({
  port: port
})

// cors plugin
server.register(plugin, function (error) {
  if (error) server.log('error', error)
})

// logger plugin
server.register({
  register: good,
  options: loggerOptions
}, function (error) {
  if (error) server.log('error', error)
})

var corsProxyHost = process.env.CORS_PROXY_HOST;
if (!corsProxyHost) {
  throw new Error('Set CORS_PROXY_HOST to a valid hostname, e.g.: 192.1.2.3:31337')
}

// proxy route
server.route({
  method: '*',
  path: '/{path*}',
  handler: {
    proxy: {
      passThrough: true,
      mapUri: function(request, callback) {
        request.host = corsProxyHost
        request.path = request.path
        console.log('proxy to http://' + request.host + request.path)
        delete request.headers.referer;
        callback(null, 'http://' + request.host + request.url.path, request.headers);
      }
    }
  }
})

// default route
server.route({
  method: 'GET',
  path: '/',
  handler: {
    file: 'public/index.html'
  }
})


server.start(function (error) {
  if (error) server.log('error', error)

  server.log('info', 'CORS Proxy running at:' + server.info.uri)
})
